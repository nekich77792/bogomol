{"version":3,"sources":["classes.js","inputs.js","physics.js","platforms.js","time.js","graph.js","canvasRenderer/sprite.js","levelEditor.js","canvasRenderer/canvasRenderer.js","code.js"],"names":["GameObj","x","y","pos","Platform","w","R","L","IDLE","GO","JUMP","DEATH","HERO","ENEMY1","LAVAMAN","LiveObj","type","state","vel","dir","attack","State","lvl","hero","enemies","steering","mouse","mouseChanged","st","Input","keyboard","init","addEventListener","onKeyPress","onKeyUp","onMouseDown","onMouseUp","e","key","space","s","a","d","readInput","input","act","Number","applyEnemyPhysics","applyPhysics","enemy","Math","abs","forEach","i","length","p","createLvl","n","shift","step","drawAxes","ctx","beginPath","moveTo","lineTo","font","fillText","strokeStyle","closePath","stroke","drawSqrt","sqrt","Sprite","img","anims","currentFrame","currentState","animKey","get","x0","y0","h","spriteTime","allFrames","srcX","floor","save","translate","scale","xx","yy","ww","hh","drawImage","strokeRect","drawOrigin","restore","lineWidth","Anim","drawPlatform","sprites","Map","cam","initRender","canvas","document","getElementById","getContext","fillStyle","loadAssets","heroSprite","createHeroSprite","set","createEnemy1Sprite","createLavamanSprite","heroImage","Image","src","forestboy","enemyImage","enemySheet","lavaImage","lavaSheet","coords","round","render","clearRect","width","height","fillRect","draw","liveObject","window","initState","pxToKm","pow","garbageCollector","time","splice","loop","requestAnimationFrame","updateState"],"mappings":"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","file":"code.js","sourceRoot":"..","sourcesContent":["class GameObj{\n\n\tconstructor(x,y){\n\t\tthis.pos = {x,y}\n\t}\n\n\n};\n\nexport class Platform extends GameObj{\n\tconstructor(x,y,w){\n\n\t\tsuper(x,y);\n\t\tthis.w = w;\n\t}\n}\n// --- consts ----\nexport const R = 1\nexport const L = -1\n\n//-- states -----\nexport const IDLE = 0;\nexport const GO = 1;\nexport const JUMP = 2;\nexport const DEATH = 3;\n\n\n//--- types ----\nexport const HERO = 0;\nexport const ENEMY1 = 1;\nexport const LAVAMAN = 2;\n\nexport class LiveObj extends GameObj{\n\n\tconstructor(type,x,y, state = IDLE){\n\t\tsuper(x,y)\n\t\tthis.vel = {x:0,y:0}\n\t\tthis.state = state;\n\t\tthis.type = type;\n\t\tthis.dir = R \n\t\tthis.attack = -1\n\t}\n\n}\n\n\n\n\nexport class State{\n\tconstructor(lvl){\n\t\tthis.hero = new LiveObj(HERO, 10, 10, IDLE);\n\t\t//this.enemy = new LiveObj(ENEMY1, 490, 20, GO);\n\t\tthis.enemies = [new LiveObj(ENEMY1, 490, 20, GO),\n\t\t\t\t\t\tnew LiveObj(ENEMY1, 300, 100, GO),\n\t\t\t\t\t\tnew LiveObj(LAVAMAN, 250, 100, GO)]\n\t\tthis.lvl = lvl;\n\t\t//this.cam = {x:0,y:0}\n\n\t}\n\n\tupdateState({steering, mouse, mouseChanged}){\n\t \tif (mouseChanged){\n\t\t\tthis.hero.attack = 0\n\t\t}\n\t\telse if (this.hero.attack >= 20){\n\t\t\tthis.hero.attack = -1\n\t\t}\n\t\telse if (this.hero.attack >= 0){\n\t\t\tthis.hero.attack++\n\t\t}\n\t\t\n\n\t\tlet st = this.hero.state\n\t\tswitch (st){\n\t\t\tcase IDLE:\n\t\t\t\tif (steering.x != 0) {\n\t\t\t\t\tst = GO\n\t\t\t\t}else if(steering.y == 1){\n\t\t\t\t\tst=JUMP\n\t\t\t\t\tthis.hero.vel.y = -8\n\t\t\t\t}else {st=IDLE}\t\t\n\t\t\t\tbreak;\n\n\t\t\tcase GO :\n\t\t\t\tif (steering.x == 0) {\n\t\t\t\t\tst = IDLE\n\t\t\t\t}else if (steering.y == 1){\n\t\t\t\t\tst = JUMP\n\t\t\t\t\tthis.hero.vel.y = -8\n\t\t\t\t}else {st=GO}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (steering.x > 0){\n\t\t\tthis.hero.dir = R\n\t\t}else if (steering.x < 0){\n\t\t\tthis.hero.dir = L\n\t\t}\n\t\t\n\n\t\tthis.hero.state = st\n\n\t}\n\n};\n\nexport class Input{\n\tconstructor(){\n\t\tthis.steering = {x:0,y:0}\n\t\tthis.mouse = false\n\t\tthis.mouseChanged = false\n\n\t}\n\n\n}","import {HERO, ENEMY1, JUMP, GO,IDLE,Input} from './classes'\nvar keyboard = {\"w\":false,\n\t\t\t\t\"s\":false,\n\t\t\t\t\"a\":false,\n\t\t\t\t\"d\":false,\n\t\t\t\t\"space\":false};\n\nvar mouse = false\nvar mouseChanged = false\n\n\nexport function init(w){\n\n\tw.addEventListener('keydown', onKeyPress);\n\n\tw.addEventListener('keyup', onKeyUp);\n\n\tw.addEventListener('mousedown', onMouseDown);\n\n\tw.addEventListener('mouseup', onMouseUp);\n\n\n}\n\nfunction onMouseUp(e){\n\tmouse = false\n}\n\n\nfunction onMouseDown(e){\n\tmouse = true\n\tmouseChanged = true\n}\n\nfunction onKeyPress(e){\n\n\tswitch(e.key)\n\n\t{\n\t\tcase(\" \"):\n\t\t\tkeyboard.space = true;\n\t\t\tbreak;\n\n\t\tcase(\"w\"):\n\t\t\tkeyboard.w = true;\n\t\t\tbreak;\n\n\t\tcase(\"s\"):\n\t\t\tkeyboard.s = true;\n\t\t\tbreak;\n\n\t\tcase(\"a\"):\n\t\t\tkeyboard.a = true;\n\t\t\tbreak;\n\n\t\tcase(\"d\"):\n\t\t\tkeyboard.d = true;\n\t\t\tbreak;\n\n\t}\n\n\t\n}\n\nfunction onKeyUp(e){\n\n\tswitch(e.key)\n\n\t{\n\t\tcase(\" \"):\n\t\t\tkeyboard.space = false;\n\t\t\tbreak;\n\n\t\tcase(\"w\"):\n\t\t\tkeyboard.w = false;\n\t\t\tbreak;\n\n\t\tcase(\"s\"):\n\t\t\tkeyboard.s = false;\n\t\t\tbreak;\n\n\t\tcase(\"a\"):\n\t\t\tkeyboard.a = false;\n\t\t\tbreak;\n\n\t\tcase(\"d\"):\n\t\t\tkeyboard.d = false;\n\t\t\tbreak;\n\n\t}\n\n\t\n}\n\n\nexport function readInput(state){\n\n\tlet input = new Input()\n\n\tinput.act = keyboard.space\n\n\tinput.steering.y = Number(keyboard.w) - Number(keyboard.s)\n\tinput.steering.x = Number(keyboard.d) - Number(keyboard.a)\n\n\tinput.mouse = mouse\n\tinput.mouseChanged = mouseChanged\n\tmouseChanged = false // ЗЛО!\n\n\n\treturn input\n\n}","import {IDLE, GO, JUMP, L, R, DEATH} from './classes'\n\n\n\n//blabla\n\nfunction applyEnemyPhysics ({vel, pos, state, dir} ) {\n\t\n\tif (state == GO) {\n\t\tvel.x = -0.65\n\t\tvel.y += 0.25\n\t\tpos.x += vel.x\n\t\tpos.y += vel.y\n\n\t\tif (pos.y > 250){\n\t\t\tpos.y = 250;\n\t\t\tvel.y = 0\n\t\t}\n\t}\n\telse if (state == DEATH){\n\t\tvel.x = -0.65\n\t\tvel.y += 0.25\n\t\tpos.x += vel.x\n\t\tpos.y += vel.y\n\t}\t\n\n}\nexport function applyPhysics(s,input){\n\t\n\tfor (const enemy of s.enemies){\n\t\tif (enemy.state == DEATH) continue;\n\t\tif (Math.abs(enemy.pos.x - s.hero.pos.x) < 10 && \n\t\t\tMath.abs(enemy.pos.y - s.hero.pos.y) < 10 ){\n\t\t\t\tenemy.state = DEATH\n\t\t\t\tenemy.vel.y = -3\n\t\t\t}\n\n\t}\n\n\t// enemies physics\n\ts.enemies.forEach(applyEnemyPhysics);\n\n\t// hero physics\n\tconst {vel, pos, state, dir} = s.hero\n\n\n\tswitch (state) {\n\t\tcase IDLE:\n\t\t\tvel.x = 0\n\t\t\tbreak;\n\t\tcase GO:\n\t\t\tvel.x = input.steering.x \n\t\t\tbreak;\n\t\tcase JUMP:\t\t\t\n\t\t\tvel.x = input.steering.x \n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tvel.y += 0.25\n\tpos.x += vel.x * 2\n\tpos.y += vel.y\n\n\t// collistion with gnd\n\tif (pos.y > 250){\n\n\t\ts.hero.state = input.steering.x == 0 ? IDLE : GO\n\t\tpos.y = 250;\n\t\tvel.y = 0\n\t}\n  \n\n   for (var i = 0; i < s.lvl.length; i++) {\n   \t\tlet p = s.lvl[i]\n   \t\tif (pos.y > p.pos.y && \n   \t\t\tpos.x + 5 > p.pos.x && \n   \t\t\tpos.x - 5 < p.pos.x + p.w &&\n   \t\t\tpos.y < p.pos.y + 10){\n\t\t\t\tif (vel.y > 0 ){\n\t\t\t\t\ts.hero.state = input.steering.x == 0 ? IDLE : GO\n\t\t\t\t\tpos.y = p.pos.y;\n\t\t\t\t\tvel.y = 0\t\n\t\t\t\t}\n\t\t\t\t\n   \t\t\t\n\n   \t\t}\n   \t\n   }\n\n\n\n}","import {Platform} from './classes'\n\n\n\nexport function createLvl(){\n\n\tlet w = 50\n\n\treturn [\n\t\tnew Platform(200,200,w),\n\t\tnew Platform(250,150,w),\n\t\tnew Platform(300,100,w),\n\t\tnew Platform(350,50,w),\n\t\tnew Platform(400,0,w)\n\t]\n\t\n}\n\n","export default {n:0}; // количество дров прошедших со старта игры\n","\nconst shift = 250;\nconst step = 10;\n\nexport function drawAxes(ctx) {\n\n\tctx.beginPath();\n\tctx.moveTo(0, shift);\n\tctx.lineTo(500, shift);\n\tctx.moveTo(shift, 0);\n\tctx.lineTo(shift, 500);\n\n\tctx.font = '9px arial'\n\tfor (let x = 0; x <= 25; x++) {\n\n\t\tlet y = 260;\n\t\t//ctx.moveTo(x*step + shift, y);\n\t\tctx.fillText(x, x*step + shift, y);\n\n\t\t\n\t}\n\tctx.strokeStyle = 'rgb(0, 0, 0)';\n\n\tctx.closePath();\n\tctx.stroke();\n\n}\n\n\n\n\nexport function drawSqrt(ctx) {\n\n\t\n\t\n\n\tctx.beginPath();\n\tctx.moveTo(shift, shift);\n\n\tfor (let x = 0; x <= 25; x++) {\n\t\t\n\t\tlet y = Math.sqrt(x);\n\t\tctx.lineTo(x*step + shift, -y*step + shift)\n\n\n\n\t}\n \tctx.strokeStyle = 'rgb(255, 0, 0)';\n\t//ctx.closePath();\n\tctx.stroke();\n\n}","import {L} from './../classes'\nexport class Sprite {\n\tconstructor(img, anims){\n\t\tthis.img = img\n\t\tthis.anims = anims\n\t\tthis.currentFrame = 0\n\t\tthis.currentState\n\t\t//this.w = 16\n\t\t//this.h = 24\n\t}\n\n\tdraw(ctx, state, pos, dir, attack){\n\n\t\tif(this.currentState != state){\n\t\t\tthis.currentState = state\n\t\t\tthis.currentFrame = 0\n\n\t\t}\n\t\t//console.log(attack)\n\t\tlet animKey = attack >= 0 ? \"attack\" : state\n\t\tif (attack == 0) this.currentFrame = 0;\n\t\tconst {n, x0, y0, w, h, spriteTime, shift} = this.anims.get(animKey)\t\n\t\t//console.log(shift)\n\n\t\t\n\t\tconst allFrames = n * spriteTime\n\n\t\tlet currN = Math.floor(this.currentFrame/spriteTime)\n\t\t\n\t\tconst srcX = x0 + currN*w\n\n\t\t//console.log(vel)\n\t\t\n\t\tif (dir == L){ \n\n\t\t\tctx.save();\n\t\t\tctx.strokeStyle = 'red'\n\t\t\tctx.translate(pos.x, 0)\n\t\t\tctx.scale(-1, 1);\n\t\t\tlet xx = w - shift, yy = pos.y - h, ww = -w, hh = h\n\n\n\t\t\tctx.drawImage(this.img, srcX, y0, w, h, \n\t\t\t \txx, \n\t\t\t\tyy , ww, hh);\n\t\t\tctx.strokeRect(xx, yy , ww, hh);\n\t\t\tdrawOrigin(ctx, 0, pos.y)\n\t\t\tctx.restore();\n\t\t} else {\n\t\t\tctx.save()\n\t\t\tctx.translate(pos.x, 0)\n\t\t\tlet xx = -shift, yy = pos.y - h, ww = w, hh = h\n\t\t\tctx.drawImage(this.img, srcX, y0, w, h, \n\t\t\t \txx, //-shift,//pos.x - shift, \n\t\t\t\t yy , ww, hh);\n\n\t\t\tctx.strokeRect(xx, yy , ww, hh);\n\t\t\tdrawOrigin(ctx, 0, pos.y)\n\t\t\tctx.restore()\n\t\t}\n\n\n\t\tthis.currentFrame++;\n\t\tthis.currentFrame %= allFrames\n\t}\n}\n\nfunction drawOrigin(ctx, x, y){\n\tlet d = 20\n\tctx.save()\n\t\tctx.strokeStyle = 'green'\n\t\tctx.lineWidth = 1;\n\t\tctx.beginPath()\t\n\t\tctx.moveTo(x, y - d);\n\t\tctx.lineTo(x, y + d);\n\t\tctx.moveTo(x - d, y);\n\t\tctx.lineTo(x + d, y);\n\t\tctx.closePath()\n\t\tctx.stroke();\n\tctx.restore()\n}\n\nexport class Anim {\n\tconstructor(n, x0, y0, w, h,spriteTime, shift ){\n\t\tthis.n = n\n\t\tthis.x0 = x0\n\t\tthis.y0 = y0\n\t\tthis.w = w\n\t\tthis.shift = shift || w/2\n\t\tthis.h = h\n\t\tthis.spriteTime = spriteTime\n\t}\n}","export function drawPlatform() {\n\t\n}","import {drawAxes, drawSqrt} from './../graph'\nimport forestboy from './../ForestBoy.png'\nimport enemySheet from './../enemies.png'\nimport lavaSheet from './../assets/lavaman.png'\nimport {HERO, ENEMY1, JUMP, GO,IDLE, DEATH, LAVAMAN} from './../classes'\nimport {Sprite, Anim} from './sprite'\nimport {} from './../levelEditor'\n\n\n// 22:36 воры уехали...\n\nconst sprites = new Map()\nconst cam = {x:250,y:0}\n\nlet ctx;\n\nexport function initRender(){\n\n\tconst canvas = document.getElementById('tututu');\n\tctx = canvas.getContext('2d');\n\tctx.fillStyle = 'rgba(0, 0, 200, 0.5)'\n}\n\n\nexport function loadAssets(state){\n\n\t// HERO\n\tconst heroSprite = createHeroSprite();\n\tsprites.set(state.hero, heroSprite);\n\n\t// ENEMY1\n\t//const enemy = createEnemy1Sprite();\n\n\tfor(let i = 0;i < state.enemies.length; i++){\n\t\tlet enemy = state.enemies[i]\n\t\tswitch (enemy.type) {\n\t\t\tcase ENEMY1: sprites.set (enemy ,createEnemy1Sprite(enemy) )\n\t\t\t\tbreak;\n\t\t\tcase LAVAMAN: sprites.set (enemy ,createLavamanSprite(enemy) )\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\n\t}\n\t//sprites.set(ENEMY1, enemy);\n\n\n\n}\n\nfunction createHeroSprite (){\n\tconst anims  = new Map()\n\t//n, x0, y0, w, h,spriteTime , shift\n\tanims.set(GO,       new Anim(6, 11, 43, 16, 17, 5))\n\tanims.set(IDLE,     new Anim(3, 11, 12, 16, 18, 14))\n\tanims.set(JUMP,     new Anim(3, 59, 44, 16, 18, 10))\n\tanims.set(\"attack\", new Anim(4, 8, 122, 26, 18, 5, 6))\n\n\tconst heroImage = new Image();\n\theroImage.src = forestboy;\n\t//console.log (forestboy);\n\treturn new Sprite(heroImage, anims);\n}\n\nfunction createEnemy1Sprite (enemy){\n\tconst anims  = new Map()\n\t//n, x0, y0, w, h,spriteTime \n\tanims.set(GO, new Anim(4, 0, 0, 30, 15, 8))\n\tanims.set(DEATH, new Anim(4, 0, 0, 30, 15, 8))\n//\tanims.set(IDLE, new Anim(3, 11, 12, 16, 18, 14))\n//\tanims.set(JUMP, new Anim(3, 59, 44, 16, 18, 10))\n\n\tconst enemyImage = new Image();\n\tenemyImage.src = enemySheet;\n\treturn new Sprite(enemyImage, anims);\n\t\n}\n\nfunction createLavamanSprite (enemy){\n\tconst anims  = new Map()\n\t//n, x0, y0, w, h,spriteTime \n\tanims.set(GO, new Anim(50, 0, 0, 64, 64, 1))\n//\tanims.set(DEATH, new Anim(4, 0, 0, 30, 15, 8))\n//\tanims.set(IDLE, new Anim(3, 11, 12, 16, 18, 14))\n//\tanims.set(JUMP, new Anim(3, 59, 44, 16, 18, 10))\n\n\tconst lavaImage = new Image();\n\tlavaImage.src = lavaSheet;\n\treturn new Sprite(lavaImage, anims);\n\t\n}\n\n\n\n\n\n\nexport function coords (ctx, hero){\n\n\tctx.font = '15px arial'\n\tctx.fillText(Math.round(hero.pos.x)+':'+Math.round(hero.pos.y), 350 ,470 );\n\tctx.fillText(Math.round(hero.vel.x)+':'+Math.round(hero.vel.y), 350 ,485 );\n\n\n}\n\n\n\n\nexport function render(state) {\n//console.log(state.hero.x;\n//----- camera ---\n\tif (state.hero.pos.x > cam.x){\n\t\tcam.x = state.hero.pos.x \n\t\t\n\t}\n\n\tif (state.hero.pos.x < cam.x - 240){\n\t\tcam.x = state.hero.pos.x + 240\n\t\t\n\t}\n\n\n\t\n\tcam.y = state.hero.pos.y - 250\n\n\t\n\t\n\n\tctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height);\n\n\n\tctx.save();\n\tctx.translate(-(cam.x - 250), -cam.y)\n\n\tcoords(ctx, state.hero);\n\n  \tdrawAxes(ctx);\n\tdrawSqrt(ctx);\n\n\tfor (let i = 0; i < state.lvl.length; i++) {\n\n\t\tlet p = state.lvl[i]\n\t\t//ctx.fillStyle = 'rgb(200, 150, 150)'\n\t\tctx.fillStyle = 'lwn'\n\t\tctx.fillRect(p.pos.x, p.pos.y, p.w, 50);\n\n\t\t \n\t}\n\n\t//-- hero -------------\n\tconst {dir, pos, state: st, attack} = state.hero \n\tsprites.get(state.hero).draw(ctx, st, pos, dir, attack);\n\t//-- enemy ------------\n\n\tfor (let liveObject of state.enemies){\n\t\t//console.log(liveObject)\n\t\tlet sprite = sprites.get(liveObject)\n\t\tsprite.draw(ctx, liveObject.state, liveObject.pos, liveObject.dir);\n\t}\n\t//shadowPlarform();\n\n\tctx.restore();\n\n\t\n} \n\n","import {init as initInput, readInput} from './inputs'\nimport {applyPhysics} from './physics'\nimport {createLvl} from './platforms'\nimport {Platform, LiveObj, State} from './classes'\nimport  time from './time'\nimport {initRender, render, loadAssets} from './canvasRenderer/canvasRenderer'\n\nlet state;\n\n\n// --- init -----------------\nfunction init(){\n\n\tinitRender();\n\tinitInput(window);\n\tinitState();\n\tloadAssets(state);\n\n}\n\nfunction initState(){\t \n\tstate = new State(createLvl());\n};\n\n\n \n// ---  update ----\n\nfunction pxToKm (y){\n\treturn y*((198/108) * Math.pow(10, -5))\n}\n\nfunction garbageCollector(){\n\tif (time.n % 10 != 0) return;// hразряжаем\n\n\tfor (let i = 0; i < state.enemies.length; i++){\n\t\tconst {x,y} = state.enemies[i].pos;\n\t\tif (y > 300 || x < -10){\n\t\t\t//delete state.enemies[i];\n\t\t\tstate.enemies.splice(i, 1);\n\t\n\t\t}\n\t}\n}\n\n\n\nfunction loop(){\n\n\twindow.requestAnimationFrame(loop);\n\tconst input = readInput(state, input);\n\tstate.updateState(input);\n\tapplyPhysics(state, input);\n\t    \n\t//console.log(state.enemies[0].pos.y);\n\t// zzxsz\n\t\n\tgarbageCollector();\n\trender(state);\n\tlet xm = 50\n\tif (state.hero.vel.y == -5){\n\t\t//new Platform(Math.random()*500,Math.random()*500,xm)\n\t}\n\t\n\t// update time\n\ttime.n++\n\t\n}\n\n\n\n//--- start -----------\ninit();\n\nloop();\n/*\nvar audioCtx = new AudioContext();\n\nvar oscillator = audioCtx.createOscillator();\nvar gainNode = audioCtx.createGain();\n\noscillator.connect(gainNode);\ngainNode.connect(audioCtx.destination);\n\noscillator.detune.value = 0; // value in cents\n oscillator.start(0);\n\nsetInterval(()=>{\n\toscillator.detune.value = 1200; // value in cents\n\t// oscillator.start(0);\n\t\n\tsetInterval(()=>{\n\t\toscillator.detune.value = 700; // value in cents\n\t\t\n\t\t\tsetInterval(()=>{\n\t\t\toscillator.detune.value = 00; // value in cents\n\t\t\t\toscillator.stop(3);\n\t\t\t\n\t\t\n\t\t}, 1000)\n\t}, 1000)\n}, 1000)\n\n*/\n\n"]}